<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pero.kirohuji.dao.RuleMapper" >
  <resultMap id="BaseResultMap" type="pero.kirohuji.entity.Rule" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="stock_in" property="stock_in" jdbcType="INTEGER" />
    <result column="publish" property="publish" jdbcType="INTEGER" />
    <result column="vaildate" property="vaildate" jdbcType="INTEGER" />
    <result column="delivery" property="delivery" jdbcType="INTEGER" />
    <result column="service" property="service" jdbcType="INTEGER" />
    <result column="read" property="read" jdbcType="INTEGER" />
    <result column="manager" property="manager" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, stock_in, publish, vaildate, delivery, service, read, manager
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from rule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from rule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="pero.kirohuji.entity.Rule" >
    insert into rule (id, stock_in, publish, 
      vaildate, delivery, service, 
      read, manager)
    values (#{id,jdbcType=INTEGER}, #{stock_in,jdbcType=INTEGER}, #{publish,jdbcType=INTEGER}, 
      #{vaildate,jdbcType=INTEGER}, #{delivery,jdbcType=INTEGER}, #{service,jdbcType=INTEGER}, 
      #{read,jdbcType=INTEGER}, #{manager,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="pero.kirohuji.entity.Rule" >
    insert into rule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="stock_in != null" >
        stock_in,
      </if>
      <if test="publish != null" >
        publish,
      </if>
      <if test="vaildate != null" >
        vaildate,
      </if>
      <if test="delivery != null" >
        delivery,
      </if>
      <if test="service != null" >
        service,
      </if>
      <if test="read != null" >
        read,
      </if>
      <if test="manager != null" >
        manager,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stock_in != null" >
        #{stock_in,jdbcType=INTEGER},
      </if>
      <if test="publish != null" >
        #{publish,jdbcType=INTEGER},
      </if>
      <if test="vaildate != null" >
        #{vaildate,jdbcType=INTEGER},
      </if>
      <if test="delivery != null" >
        #{delivery,jdbcType=INTEGER},
      </if>
      <if test="service != null" >
        #{service,jdbcType=INTEGER},
      </if>
      <if test="read != null" >
        #{read,jdbcType=INTEGER},
      </if>
      <if test="manager != null" >
        #{manager,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pero.kirohuji.entity.Rule" >
    update rule
    <set >
      <if test="stock_in != null" >
        stock_in = #{stock_in,jdbcType=INTEGER},
      </if>
      <if test="publish != null" >
        publish = #{publish,jdbcType=INTEGER},
      </if>
      <if test="vaildate != null" >
        vaildate = #{vaildate,jdbcType=INTEGER},
      </if>
      <if test="delivery != null" >
        delivery = #{delivery,jdbcType=INTEGER},
      </if>
      <if test="service != null" >
        service = #{service,jdbcType=INTEGER},
      </if>
      <if test="read != null" >
        read = #{read,jdbcType=INTEGER},
      </if>
      <if test="manager != null" >
        manager = #{manager,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pero.kirohuji.entity.Rule" >
    update rule
    set stock_in = #{stock_in,jdbcType=INTEGER},
      publish = #{publish,jdbcType=INTEGER},
      vaildate = #{vaildate,jdbcType=INTEGER},
      delivery = #{delivery,jdbcType=INTEGER},
      service = #{service,jdbcType=INTEGER},
      read = #{read,jdbcType=INTEGER},
      manager = #{manager,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>